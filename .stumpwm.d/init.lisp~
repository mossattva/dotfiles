#-quicklisp
(let ((quicklisp-init (merge-pathnames "quicklisp/setup.lsp"
				       (user-homedir-pathname))))
  (when (probe-file quicklisp-init)
    (load quicklisp-init)))

(in-package :stumpwm)
(setf *default-package* :stumpwm)

;;; Modules
(set-module-dir "/home/mossheart/.stumpwm.d/modules/")
(add-to-load-path "/home/mossheart/.stumpwm.d/modules/pamixer")
(add-to-load-path "/home/mossheart/.stumpwm.d/modules/acpi-backlight")

(load-module "pamixer")			
(load-module "swm-gaps")
(load-module "battery-portable")
(load-module "cpu")
(load-module "mem")
(load-module "wifi")
(load-module "acpi-backlight")

(acpi-backlight:init "intel_backlight")

;; Windowing

(setf swm-gaps:*inner-gaps-size* 10)
(setf swm-gaps:*outer-gaps-size* 10)

(setf *mouse-focus-policy*    :click
      *float-window-modifier* :SUPER)

;;; Keybinds
(set-prefix-key (kbd "C-z"))

(define-key *top-map* (kbd "XF86AudioRaiseVolume") "pamixer-volume-up")
(define-key *top-map* (kbd "XF86AudioLowerVolume") "pamixer-volume-down")
(define-key *top-map* (kbd "XF86AudioMute") "pamixer-toggle-mute")

(define-key *top-map* (kbd "XF86MonBrightnessUp") "backlight-up")
(define-key *top-map* (kbd "XF86MonBrightnessDown") "backlight-down")

;;; Modeline
(setf mem::*mem-modeline-fmt* "%p")
(setf cpu::*cpu-modeline-fmt* "%c")
(setf pamixer:*modeline-fmt* "%v")
(setf *window-format* "%c")

(setf *screen-mode-line-format* (list
				 "%n "
				 "%W"
				 "^>"
				 " | %P"
				 " | %I"
				 ;; " | %C"
				 ;; " | MEM: %M"
				 " | %B"
				 " | %d"))


;;; Final INIT
(when *initializing*
  (mode-line)
  (swm-gaps:toggle-gaps))
